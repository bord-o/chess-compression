// use bit_vec::BitVec;
use huffman_compress::{Book, CodeBuilder, Tree};
use itertools::Itertools;
use std::collections::HashMap;
use std::iter::FromIterator;

pub fn test(indexes: &Vec<u8>) {
    // let mut weights: HashMap<u8, usize> = HashMap::new();
    let frequencies: HashMap<u8, usize> = HashMap::from([
        (17, 6549660),
        (2, 19353377),
        (28, 3335848),
        (54, 8695),
        (9, 5897575),
        (13, 5051164),
        (12, 5037195),
        (92, 4),
        (6, 7697156),
        (57, 2791),
        (89, 5),
        (19, 5176266),
        (31, 2518673),
        (47, 95487),
        (95, 4),
        (96, 1),
        (103, 1),
        (79, 30),
        (21, 4984120),
        (8, 6817284),
        (42, 373086),
        (46, 127152),
        (62, 480),
        (22, 4467953),
        (29, 3077168),
        (73, 56),
        (67, 127),
        (70, 83),
        (83, 10),
        (64, 265),
        (38, 887332),
        (7, 6857582),
        (15, 5530209),
        (1, 30721413),
        (20, 5297425),
        (58, 1889),
        (51, 25523),
        (18, 5830636),
        (50, 36156),
        (60, 903),
        (63, 339),
        (94, 3),
        (71, 58),
        (80, 27),
        (75, 31),
        (102, 1),
        (4, 11383951),
        (14, 5196873),
        (99, 3),
        (3, 13851683),
        (68, 109),
        (30, 2709615),
        (41, 478357),
        (53, 12218),
        (48, 70761),
        (5, 9084084),
        (33, 1969953),
        (35, 1513193),
        (91, 8),
        (24, 4598017),
        (69, 89),
        (76, 39),
        (77, 24),
        (23, 4291776),
        (93, 7),
        (45, 172135),
        (34, 1756107),
        (88, 9),
        (85, 10),
        (40, 589821),
        (101, 1),
        (37, 1052460),
        (10, 5363924),
        (66, 154),
        (11, 5164025),
        (32, 2229827),
        (44, 224888),
        (16, 5221425),
        (78, 33),
        (52, 17952),
        (81, 14),
        (90, 5),
        (120, 1),
        (61, 664),
        (86, 7),
        (0, 59702781),
        (59, 1301),
        (65, 198),
        (72, 61),
        (25, 4257373),
        (56, 4094),
        (74, 42),
        (82, 22),
        (39, 733514),
        (43, 289966),
        (87, 7),
        (84, 10),
        (49, 49618),
        (27, 3679709),
        (36, 1264472),
        (26, 4000035),
        (100, 1),
        (55, 5999),
    ]);
    let (book, tree) = CodeBuilder::from_iter(&frequencies).finish();
    for num in frequencies.keys().sorted() {
        println!("{:?}, {:?}", num, book.get(&num));
    }
}
